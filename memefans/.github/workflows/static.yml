# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install -g markdown-it

      - name: Debug Environment
        run: |
          echo "Current directory:"
          pwd
          echo "\nDirectory contents:"
          ls -la
          echo "\nDocs directory contents:"
          ls -la docs/

      - name: Build Site
        run: |
          echo "Step 1: Creating site directory"
          mkdir -p _site
          
          echo "Step 2: Converting markdown files"
          for file in docs/*.md; do
            echo "Processing: $file"
            if [ -f "$file" ]; then
              filename=$(basename "$file")
              basename="${filename%.md}"
              outfile="_site/${basename}.html"
              echo "Converting $file to $outfile"
              
              # Add HTML wrapper around markdown content
              echo "<!DOCTYPE html>
              <html>
              <head>
                  <meta charset='UTF-8'>
                  <meta name='viewport' content='width=device-width, initial-scale=1'>
                  <title>${basename}</title>
                  <style>
                      body {
                          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
                          line-height: 1.6;
                          max-width: 800px;
                          margin: 0 auto;
                          padding: 20px;
                      }
                      pre { background: #f6f8fa; padding: 16px; overflow: auto; }
                      code { font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace; }
                  </style>
              </head>
              <body>" > "$outfile"
              
              # Convert and append markdown content
              npx markdown-it "$file" >> "$outfile"
              
              # Close HTML tags
              echo "</body></html>" >> "$outfile"
              
              echo "Created: $outfile"
              ls -l "$outfile"
            fi
          done
          
          echo "Step 3: Creating index.html"
          cat > _site/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
              <meta charset="UTF-8">
              <meta name="viewport" content="width=device-width, initial-scale=1">
              <title>MEMEFANS Documentation</title>
              <meta http-equiv="refresh" content="0; url=permission-justification.html">
              <style>
                  body {
                      font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
                      line-height: 1.6;
                      max-width: 800px;
                      margin: 0 auto;
                      padding: 20px;
                      text-align: center;
                  }
                  a { color: #1DA1F2; text-decoration: none; }
                  a:hover { text-decoration: underline; }
              </style>
          </head>
          <body>
              <h1>MEMEFANS Documentation</h1>
              <p>If you are not redirected automatically, <a href="permission-justification.html">click here</a>.</p>
          </body>
          </html>
          EOL
          
          echo "Step 4: Creating .nojekyll"
          touch _site/.nojekyll
          
          echo "Final site structure:"
          ls -la _site/
          echo "\nGenerated files:"
          find _site -type f

      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'
          
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
