# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  push:
    branches: ["main"]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install Dependencies
        run: |
          npm install -g markdown-it
          npm install -g markdown-it-mermaid
          npm install -g @mermaid-js/mermaid-cli

      - name: Build Site
        run: |
          # Create output directory
          mkdir -p _site
          
          # Copy all markdown files to _site
          cp -r docs/* _site/
          
          # Convert markdown files
          for file in _site/*.md; do
            if [ -f "$file" ]; then
              html_file="${file%.md}.html"
              echo "Converting $file to $html_file"
              
              # Create HTML wrapper
              cat > "$html_file" << EOL
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>MEMEFANS Documentation</title>
    <style>
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            line-height: 1.6;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        pre { background: #f6f8fa; padding: 16px; overflow: auto; }
        code { font-family: 'SFMono-Regular', Consolas, monospace; }
        .mermaid { background: #fff; padding: 10px; border-radius: 5px; }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>
    <script>
        mermaid.initialize({
            startOnLoad: true,
            theme: 'default',
            flowchart: { useMaxWidth: true }
        });
    </script>
</head>
<body>
EOL
              
              # Convert markdown to HTML and append
              npx markdown-it --use markdown-it-mermaid "$file" >> "$html_file"
              
              # Close HTML tags
              echo "</body></html>" >> "$html_file"
              
              # Remove original markdown file
              rm "$file"
            fi
          done
          
          # Create index.html
          cat > _site/index.html << EOL
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>MEMEFANS Documentation</title>
    <meta http-equiv="refresh" content="0; url=use-cases-detailed.html">
</head>
<body>
    <h1>MEMEFANS Documentation</h1>
    <p>Redirecting to <a href="use-cases-detailed.html">documentation</a>...</p>
</body>
</html>
EOL
          
          # Create .nojekyll file
          touch _site/.nojekyll
          
          # List generated files
          echo "Generated files:"
          ls -la _site/

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '_site'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
